class Solution {
public:
    vector<int> solveQueries(vector<int>& nums, vector<int>& queries) {
         int n=nums.size();
         unordered_map<int,vector<int>>h;
         for(int i=0;i<n;i++){
            h[nums[i]].push_back(i);
         }
         vector<int>mindist(n,INT_MAX);
         for(auto &pairs:h){
            auto &a=pairs.second;
            int m=a.size();
            if(m==1){
                mindist[a[0]]=-1;
                continue;
            }
            for(int i=0;i<m;i++){
                int curr=a[i];
                int prev=a[(i-1+m)%m];
                int next=a[(i+1)%m];
                int fd=min(abs(curr-prev),n-abs(curr-prev));
                int bd=min(abs(curr-next),n-abs(curr-next));
                 mindist[curr]=min(fd,bd);
            }
           
         }
         vector<int>result;
         for(auto query:queries){
            result.push_back(mindist[query]);
         }
         return result;
    }
    
};
